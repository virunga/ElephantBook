"""
Django settings for ElephantBook project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG") == "True"

SECRET_KEY = os.environ["SECRET_KEY"]
ER_MAIN = os.getenv("ER_MAIN_ENDPOINT")
ER_ADMIN = os.getenv("ER_ADMIN_ENDPOINT")
ER_EVENT_TYPE = os.getenv("ER_EVENT_TYPE")
ER_TOKEN = os.getenv("ER_TOKEN")

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "eb_core.apps.EbCoreConfig",
    "eb_anno.apps.EbAnnoConfig",
    "eb_ml.apps.EbMlConfig",
    "eb_fg.apps.EbFgConfig",
    "eb_api.apps.EbApiConfig",
    "rcos_match.apps.RcosMatchConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.messages",
    "django.contrib.postgres",
    "django.contrib.sessions",
    "django.contrib.staticfiles",
    "django_celery_beat",
    "django_drf_filepond",
    "django_extensions",
    "django_tables2",
    "multiselectfield",
    "polymorphic",
    "rest_framework",
    "rest_framework.authtoken",
]

DJANGO_DRF_FILEPOND_UPLOAD_TMP = os.path.join(BASE_DIR, "filepond-temp-uploads")
DJANGO_DRF_FILEPOND_FILE_STORE_PATH = os.path.join(BASE_DIR, "stored_uploads")  # unused

MIDDLEWARE = [
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
]

ROOT_URLCONF = "ElephantBook.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "ElephantBook", "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "ElephantBook.context_processors.er_endpoints",
            ],
        },
    },
]

WSGI_APPLICATION = "ElephantBook.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("SQL_DATABASE", "eb"),
        "USER": os.getenv("SQL_USER", "eb"),
        "PASSWORD": os.environ["SQL_PASSWORD"],
        "HOST": os.getenv("SQL_HOST", "db"),
        "PORT": os.getenv("SQL_PORT", "5432"),
        "CONN_MAX_AGE": 60,
        "CONN_HEALTH_CHECKS": True,
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

TIME_ZONE = os.getenv("TZ", "UTC")
USE_I18N = False
USE_THOUSAND_SEPARATOR = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

LOGIN_REDIRECT_URL = "/"

AUTH_USER_MODEL = "eb_core.EBUser"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

NOTEBOOK_ARGUMENTS = [
    "--ip=0.0.0.0",
    "--port=8888",
    "--no-browser",
    "--notebook-dir='/ElephantBook/notebooks/'",
    "--certfile='/ElephantBook/fullchain.pem'",
    "--keyfile='/ElephantBook/privkey.pem'",
]

# Celery Configuration Options
CELERY_BROKER_URL = os.getenv("CELERY_BROKER", "redis://redis:6379")
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 60 * 60 * 12

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
}

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

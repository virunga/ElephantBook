version: "3.8"
services:
  web:
    build: .
    working_dir: /ElephantBook/
    command: ./startup.sh gunicorn
    volumes:
      - ElephantBook:/ElephantBook/
      - static:/ElephantBook/static/
      - media:/ElephantBook/media/
      - logs:/ElephantBook/logs/
    restart: unless-stopped
    expose:
      - 8000
    env_file:
      - ./.env.eb
    depends_on:
      - db
  db:
    image: postgres:alpine
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./privkey.pem:/privkey.pem:ro
      - ./fullchain.pem:/fullchain.pem:ro
      - static:/static/:ro
      - media:/media/:ro
      - logs:/var/log/nginx/
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  celery:
    build: .
    working_dir: /ElephantBook/
    command: celery -A ElephantBook worker --beat --scheduler django -l info
    volumes:
      - ElephantBook:/ElephantBook/:ro
      - static:/ElephantBook/static/:ro
      - media:/ElephantBook/media/:ro
      - logs:/ElephantBook/logs/
    env_file:
      - ./.env.eb
    depends_on:
      - web
      - redis
  redis:
    image: redis
  jupyter:
    build: .
    working_dir: /ElephantBook/
    command: python manage.py shell_plus --lab
    volumes:
      - ElephantBook:/ElephantBook/
      - static:/ElephantBook/static/
      - media:/ElephantBook/media/
    restart: unless-stopped
    ports:
      - 8888:8888
    env_file:
      - ./.env.eb
    depends_on:
      - db
volumes:
  postgres_data:
  ElephantBook:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: .
  static:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./static/
  media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./media/
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/
